{
  "version": 3,
  "file": "urlMatcherFactory.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/core/url/urlMatcherFactory.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * @internalapi\n * @module url\n */ /** for typedoc */\nimport { forEach, extend } from '../common/common';\nimport { isObject, isDefined, isFunction, isString } from '../common/predicates';\nimport { UrlMatcher } from './urlMatcher';\nimport { Param, DefType } from '../params/param';\nimport { ParamTypes } from '../params/paramTypes';\nimport { ParamTypeDefinition } from '../params/interface';\nimport { Disposable } from '../interface';\nimport { ParamType } from '../params/paramType';\nimport { ParamFactory, UrlMatcherConfig } from './interface';\n\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nexport class UrlMatcherFactory implements Disposable, UrlMatcherConfig {\n  /** @hidden */ paramTypes = new ParamTypes();\n  /** @hidden */ _isCaseInsensitive = false;\n  /** @hidden */ _isStrictMode = true;\n  /** @hidden */ _defaultSquashPolicy: boolean | string = false;\n\n  /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n  paramFactory: ParamFactory = {\n    /** Creates a new [[Param]] from a CONFIG block */\n    fromConfig: (id: string, type: ParamType, config: any) => new Param(id, type, config, DefType.CONFIG, this),\n\n    /** Creates a new [[Param]] from a url PATH */\n    fromPath: (id: string, type: ParamType, config: any) => new Param(id, type, config, DefType.PATH, this),\n\n    /** Creates a new [[Param]] from a url SEARCH */\n    fromSearch: (id: string, type: ParamType, config: any) => new Param(id, type, config, DefType.SEARCH, this),\n  };\n\n  constructor() {\n    extend(this, { UrlMatcher, Param });\n  }\n\n  /** @inheritdoc */\n  caseInsensitive(value?: boolean): boolean {\n    return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n  }\n\n  /** @inheritdoc */\n  strictMode(value?: boolean): boolean {\n    return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n  }\n\n  /** @inheritdoc */\n  defaultSquashPolicy(value?: boolean | string) {\n    if (isDefined(value) && value !== true && value !== false && !isString(value))\n      throw new Error(`Invalid squash policy: ${value}. Valid policies: false, true, arbitrary-string`);\n    return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n  }\n\n  /** @hidden */\n  private _getConfig = config =>\n    extend({ strict: this._isStrictMode, caseInsensitive: this._isCaseInsensitive }, config);\n\n  /**\n   * Creates a [[UrlMatcher]] for the specified pattern.\n   *\n   * @param pattern  The URL pattern.\n   * @param config  The config object hash.\n   * @returns The UrlMatcher.\n   */\n  compile(pattern: string, config?: { [key: string]: any }) {\n    return new UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n  }\n\n  /**\n   * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n   *\n   * @param object  The object to perform the type check against.\n   * @returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  isMatcher(object: any): boolean {\n    // TODO: typeof?\n    if (!isObject(object)) return false;\n    let result = true;\n\n    forEach(UrlMatcher.prototype, (val, name) => {\n      if (isFunction(val)) result = result && (isDefined(object[name]) && isFunction(object[name]));\n    });\n    return result;\n  }\n\n  /**\n   * Creates and registers a custom [[ParamType]] object\n   *\n   * A [[ParamType]] can be used to generate URLs with typed parameters.\n   *\n   * @param name  The type name.\n   * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n   * @param definitionFn A function that is injected before the app runtime starts.\n   *        The result of this function should be a [[ParamTypeDefinition]].\n   *        The result is merged into the existing `definition`.\n   *        See [[ParamType]] for information on the values accepted.\n   *\n   * @returns - if a type was registered: the [[UrlMatcherFactory]]\n   *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n   *\n   * Note: Register custom types *before using them* in a state definition.\n   *\n   * See [[ParamTypeDefinition]] for examples\n   */\n  type(name: string, definition?: ParamTypeDefinition, definitionFn?: () => ParamTypeDefinition) {\n    const type = this.paramTypes.type(name, definition, definitionFn);\n    return !isDefined(definition) ? type : this;\n  }\n\n  /** @hidden */\n  $get() {\n    this.paramTypes.enqueue = false;\n    this.paramTypes._flushTypeQueue();\n    return this;\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.paramTypes.dispose();\n  }\n}\n"
  ]
}